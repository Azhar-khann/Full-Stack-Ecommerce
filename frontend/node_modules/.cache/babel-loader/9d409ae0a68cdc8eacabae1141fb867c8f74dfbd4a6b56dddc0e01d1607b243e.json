{"ast":null,"code":"import { loggedIn } from \"../api/serverCalls\";\nconst {\n  createAsyncThunk,\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nexport const loginstatus = createAsyncThunk('loggedIn/status', async () => {\n  const logstatus = await loggedIn();\n  return logstatus;\n});\nexport const loginSlice = createSlice({\n  name: \"register\",\n  initialState: {\n    user: false,\n    isLoading: false,\n    hasError: false\n  },\n  reducers: {},\n  extraReducers: {\n    [logInstatus.pending]: (state, action) => {\n      console.log('pending');\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [logInstatus.fulfilled]: (state, action) => {\n      console.log('fulfiled');\n      state.user = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [logInstatus.rejected]: (state, action) => {\n      console.log('failed');\n      state.isLoading = false;\n      state.hasError = true;\n    }\n  }\n});\nexport const selectdata = state => state.loginstatus.user;\nexport const isLoadingData = state => state.loginstatus.isLoading;\nexport default loginSlice.reducer;","map":{"version":3,"names":["loggedIn","createAsyncThunk","createSlice","require","loginstatus","logstatus","loginSlice","name","initialState","user","isLoading","hasError","reducers","extraReducers","logInstatus","pending","state","action","console","log","fulfilled","payload","rejected","selectdata","isLoadingData","reducer"],"sources":["/Users/azhar/Desktop/codeacademy/full-stack-ecommerce/frontend/src/slices/loginstatus.js"],"sourcesContent":["import { loggedIn } from \"../api/serverCalls\";\nconst { createAsyncThunk, createSlice } =  require(\"@reduxjs/toolkit\");\n\n\nexport const loginstatus = createAsyncThunk(\n    'loggedIn/status',\n    async () => {\n        const logstatus = await loggedIn();\n        return logstatus\n    }\n) \n\nexport const loginSlice = createSlice({\n    name: \"register\",\n    initialState: {\n        user: false,\n        isLoading:false,\n        hasError:false\n    },\n\n    reducers: {},\n\n    extraReducers: {\n\n        [logInstatus.pending]: (state, action) => {\n            console.log('pending')\n            state.isLoading = true;\n            state.hasError = false;\n        },\n\n        [logInstatus.fulfilled]: (state, action) => {\n            console.log('fulfiled')           \n            state.user = action.payload;\n            state.isLoading = false;\n            state.hasError = false;\n        },\n\n        [logInstatus.rejected]: (state, action) => {\n            console.log('failed')\n            state.isLoading = false;\n            state.hasError = true;\n        }\n    }\n});\n\n\nexport const selectdata = (state) => state.loginstatus.user;\n\nexport const isLoadingData = (state) => state.loginstatus.isLoading;\nexport default loginSlice.reducer;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,MAAM;EAAEC,gBAAgB;EAAEC;AAAY,CAAC,GAAIC,OAAO,CAAC,kBAAkB,CAAC;AAGtE,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CACvC,iBAAiB,EACjB,YAAY;EACR,MAAMI,SAAS,GAAG,MAAML,QAAQ,CAAC,CAAC;EAClC,OAAOK,SAAS;AACpB,CACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAClCK,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACVC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAC,KAAK;IACfC,QAAQ,EAAC;EACb,CAAC;EAEDC,QAAQ,EAAE,CAAC,CAAC;EAEZC,aAAa,EAAE;IAEX,CAACC,WAAW,CAACC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtCC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtBH,KAAK,CAACN,SAAS,GAAG,IAAI;MACtBM,KAAK,CAACL,QAAQ,GAAG,KAAK;IAC1B,CAAC;IAED,CAACG,WAAW,CAACM,SAAS,GAAG,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACxCC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBH,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACI,OAAO;MAC3BL,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,QAAQ,GAAG,KAAK;IAC1B,CAAC;IAED,CAACG,WAAW,CAACQ,QAAQ,GAAG,CAACN,KAAK,EAAEC,MAAM,KAAK;MACvCC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBH,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,QAAQ,GAAG,IAAI;IACzB;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAMY,UAAU,GAAIP,KAAK,IAAKA,KAAK,CAACZ,WAAW,CAACK,IAAI;AAE3D,OAAO,MAAMe,aAAa,GAAIR,KAAK,IAAKA,KAAK,CAACZ,WAAW,CAACM,SAAS;AACnE,eAAeJ,UAAU,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}